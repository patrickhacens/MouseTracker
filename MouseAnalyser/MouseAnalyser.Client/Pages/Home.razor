@page "/"
@using MouseTracker
@inject HttpClient http
@inject ISnackbar snack
@inject ILogger<Home> logger


<MudFileUpload @ref="uploader" T="IBrowserFile" OnFilesChanged="LoadFiles">
	<ActivatorContent>
		<MudButton Variant="Variant.Filled"
				   Color="Color.Primary"
				   StartIcon="@Icons.Material.Filled.CloudUpload">
			Upload Files
		</MudButton>
	</ActivatorContent>
</MudFileUpload>

<MudGrid>
	<MudItem xs="6">
		<MudDataGrid T="Spray" Items="Sprays" Dense @ref="grid" SortMode="SortMode.Multiple"
					 MultiSelection="false"
					 @bind-SelectedItem="SelectedSpray"
					 Filterable FilterMode="DataGridFilterMode.Simple">

			<Header>
				<MudTextField @bind-Value="@format" />
			</Header>
			<Columns>
				<SelectColumn />
				<PropertyColumn Property="p => p.Start" Title="From" Format="@format" Sortable="true" />
				<PropertyColumn Property="p => p.Duration" Title="Duration" Format="@format" Sortable="true" />
				<PropertyColumn Property="p => p.Items.Length" Title="Count" Sortable="true" />
				<PropertyColumn Property="p => p.AverageXDelta" Title="Avg X" Sortable="true" />
				<PropertyColumn Property="p => p.AverageYDelta" Title="Avg Y" Sortable="true" />
				<PropertyColumn Property="p => p.XStandardDeviation" Title="Std X" Sortable="true" />
				<PropertyColumn Property="p => p.YStandardDeviation" Title="Std Y" Sortable="true" />
			</Columns>
			<PagerContent>
				<MudDataGridPager T="Spray" />
			</PagerContent>
		</MudDataGrid>
	</MudItem>

	<MudItem xs="6">
		<SprayReplayComponent 
			ScreenWidth="1920"
			ScreenHeight="1080"
			Spray="SelectedSpray" />
	</MudItem>
</MudGrid>

@code {
	IEnumerable<Spray> Sprays = Enumerable.Empty<Spray>();

	Spray? SelectedSpray;

	MudFileUpload<IBrowserFile> uploader = null!;
	MudDataGrid<Spray> grid = null!;

	string format = "";

	async void LoadFiles(InputFileChangeEventArgs e)
	{

		try
		{
			var stream = e.File.OpenReadStream(maxAllowedSize: 1024 * 500000);
			var content = new MultipartFormDataContent();
			content.Add(new StreamContent(stream), "file", "db");

			var response = await http.PostAsync("/process", content);
			if (!response.IsSuccessStatusCode)
				snack.Add(await response.Content.ReadAsStringAsync(), Severity.Error);
			else
			{
				Sprays = await response.Content.ReadFromJsonAsync<IEnumerable<Spray>>() ?? Enumerable.Empty<Spray>();
			}
		}
		catch (Exception ex)
		{
			snack.Add("an error ocurrend", Severity.Error);
			logger.LogError(ex, "Could not send file to server");
		}
		finally
		{
			await uploader.ClearAsync();
			StateHasChanged();
		}
	}
}